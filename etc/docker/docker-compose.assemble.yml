
version: "2"

services:

# #####################################################
# Base services
  base_integration:
    mem_limit: 2g
    build:
      context: ../..
      dockerfile: etc/docker/Dockerfile.assemble

  base_volume:
    mem_limit: 1g
    image: ubuntu
    entrypoint: /bin/true

# #####################################################
# Integration services
  assembler:
    extends:
      service: base_integration
    command: /os/bin/assemble.sh
    depends_on:
      - source
      - target
    volumes_from:
      - source
      - target
    environment:
      - OS_TARGET=${OS_TARGET}
      - OS_APP=${OS_APP}
      - OS_BUILD=${OS_BUILD}
      - PRODOO_PROXY_PATH="odoo"
      - PRODOO_PYWEBDRIVER_PATH="https://localhost"

  watcher:
    extends:
      service: base_integration
    command: /os/bin/watch.sh
    hostname: prodoo
    depends_on:
      - source
      - target
    volumes_from:
      - source
      - target
    ports:
      - 8000:8000
    environment:
      - OS_TARGET=${OS_TARGET}
      - OS_APP=${OS_APP}
      - OS_BUILD=${OS_BUILD}
      - OS_DO_BUILD=${OS_DO_BUILD}

  tester:
    extends:
      service: base_integration
    command: /os/bin/test.sh
    depends_on:
      - source
      - target
    volumes_from:
      - source
      - target
    environment:
      - OS_TARGET=${OS_TARGET}
      - OS_APP=${OS_APP}
      - OS_BUILD=${OS_BUILD}

  cleaner:
    extends:
      service: base_integration
    command: /os/bin/clean.sh
    depends_on:
      - source
      - target
    volumes_from:
      - source
      - target
    environment:
      - OS_TARGET=${OS_TARGET}
      - OS_APP=${OS_APP}
      - OS_BUILD=${OS_BUILD}

# #####################################################
# Volume services
  source:
    extends:
      service: base_volume
    volumes:
      -  ../../src:/os/build/src
      -  ../../etc:/os/build/etc
      -  ../../test:/os/build/test

  target:
    extends:
      service: base_volume
    volumes:
      -  ../../.dist:/os/target
