{"_id":"pause-stream","_rev":"30-5ff943614a74939b6ff308343c3ec9fc","name":"pause-stream","description":"a ThroughStream that strictly buffers all readable events when paused.","dist-tags":{"latest":"0.0.11"},"versions":{"0.0.0":{"name":"pause-stream","version":"0.0.0","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-spec":"~0.2.0"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"_id":"pause-stream@0.0.0","dist":{"shasum":"b265f2c1639e5c8cf33a0363b38a95010030282a","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.0.tgz","integrity":"sha512-FPiBmkg7aHhDWSU3vKTO/ZgW2XZ37vrTWRLGHpnWIh/h5oNtVLLQfMyWw1w3Hu6My6TCldR7wVRLM8jJo4LCoQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD6ywY87liO0WxW1dqsK3nWysYvt6dq6aiihxShp17e3gIhANuN9gq85GTdrlrMhXNUpMKif1J4kdylQDkrhlofaUDh"}]},"readme":"","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.2":{"name":"pause-stream","version":"0.0.2","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-spec":"~0.2.0"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"_id":"pause-stream@0.0.2","dist":{"shasum":"06a38223860ae57df2807c70a7305fdea3bb2876","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.2.tgz","integrity":"sha512-fdbPAkTtRE/3+WEKWXH9LS7HJWePRm27gBUdGIeGp9IPfORK5qlzCmb/hZAn75gCYEP+pbQIJKBxSFzCL81nFQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGTW5Kr5Vt04pXTUw72lPrpSfWsv/laGnzDuLbB2H9rhAiEArhuzqPsl8vz83t1bsYu25bvimbUcoGSK+XR5pWN45fY="}]},"readme":"","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.3":{"name":"pause-stream","version":"0.0.3","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"_id":"pause-stream@0.0.3","dist":{"shasum":"51ff3feab23b7e2d74058970c59da633598b5a02","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.3.tgz","integrity":"sha512-W5CR0w7+N1cm56F4XwL2A1PXjx3SyO7r5MzdhUDP69zpyOSCgi2tdkLlZ7DI0OZ6O58ow7YfNm/X83bcE/PEfw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBrFcRz6KG4S1sOL4yyHLrKEycPdF/Ewcl2ut2f/q/1aAiBFl95sJPDgU3/WWuW5vJksm8ImiGESELOd8Le+NoAt8g=="}]},"readme":"","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.4":{"name":"pause-stream","version":"0.0.4","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n","_id":"pause-stream@0.0.4","dist":{"shasum":"4631df36b7d54b34d14caa66a507b566f5229d29","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.4.tgz","integrity":"sha512-hO9Bdv5Cs2M9wnaIvEsKGxsTnfDcyugWs7AZTF9Z7lQUT6YXZkmMwa69XB3uAYYQ3emfUD3Mln0VFdhIDJpBLQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCFLKWOLa2wtOdn9U7YIdA8WPcxrun987gOgTuzIxzj3AIhAN2FHwv0Vt672EgdICMJcEcnRGbotff4JKwNeKJU18t5"}]},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.5":{"name":"pause-stream","version":"0.0.5","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n","_id":"pause-stream@0.0.5","dist":{"shasum":"2d71dbae85983f4b2f8b7cdc38fc642c050df355","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.5.tgz","integrity":"sha512-xazaoW7ZecMnqv9LpTvhOBAphrWjIpa6t6k5sudF1CV4thnJjiQcochjsQ8k9Ua+ABgnxpgHXelKh022Jo1TWw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDLuqbpsCJ7yevS0A3cZYzAkyj89VRPCvRqcPLI00GQFgIhAK6OSJtW+4BHveQswiBZLoy4iVZJ6wBi/a9ZykXqEtqs"}]},"_npmVersion":"1.1.59","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.6":{"name":"pause-stream","version":"0.0.6","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-tester":"0.0.2","stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n","_id":"pause-stream@0.0.6","dist":{"shasum":"934b988eee6f16281897edf9dee66463b1ac4209","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.6.tgz","integrity":"sha512-5dbdFrK90CksxGcW6d+4kFPIsqhm6KLT/sk+11a/51ZLYNtSj1WBlxs4+dQZwEE+vSdOSyEhb2Scl5QZtTH3Pw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD9szyjvquRw5VIlKkQ1EPQ9C5ivatEP7luiDOEWJ3KVQIgDCmQzme2dWxrcYRdnlEbvc+8YfKqswlQ1QIttLGKk2A="}]},"_npmVersion":"1.1.59","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.7":{"name":"pause-stream","version":"0.0.7","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-tester":"0.0.2","stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n","readmeFilename":"readme.markdown","_id":"pause-stream@0.0.7","dist":{"shasum":"fe40e313c65c0f2aa1d167933c425e4cb24cb537","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.7.tgz","integrity":"sha512-xam7n7CgMF/hulPUPzFcM5AAB4tRXW2iqAII2XjON5zGlWV1AtIigP8/bY1+8XssHEY8yNTPobYwWCvg6MQzOg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBugAwgCPj4vsL/0XI2G4tXaYSCbTm0XoMocdZCaOL8/AiEAgUDLe5/9qpRAjHyC5OR4z24oSxqhtkrjj5jNfM2Wlkk="}]},"_npmVersion":"1.1.70","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.8":{"name":"pause-stream","version":"0.0.8","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-tester":"0.0.2","stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"dependencies":{"through":"~2.1"},"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n","readmeFilename":"readme.markdown","_id":"pause-stream@0.0.8","dist":{"shasum":"2914cb86d312ad195e4dcb0b2c65aea1acab4ef7","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.8.tgz","integrity":"sha512-/IbH0YouC455nbKmOMbIVylnJbuYFpaUWVpyRno3GOz8EsyAgC8zNkMgQXxNYpgteLfMh7h0nfhwh8e9QchVtg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDBk5I0wkiulGxCwbad8p/1QFtf/+uWRRKMX+V60Iy4AQIgS1i9C0eAL8Bs2GQXFN08lQGceUTJL3aFA3QwjO4Llr0="}]},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.9":{"name":"pause-stream","version":"0.0.9","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-tester":"0.0.2","stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"dependencies":{"through":"~2.1"},"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n\nThis is now the default case of \n[through](https://github.com/dominictarr/through)\n\nhttps://github.com/dominictarr/pause-stream/commit/4a6fe3dc2c11091b1efbfde912e0473719ed9cc0\n","readmeFilename":"readme.markdown","_id":"pause-stream@0.0.9","dist":{"shasum":"5cf76b2330e241034dcaf2533ad14e48e6c93fd9","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.9.tgz","integrity":"sha512-fj1Of5QivpGoXOWPtuOounPmMccULRrk2jcpUvgEOlabu04oN+VDfaSTif1rx+tI/ZDvDjCgAD9XFy3BBBOsFA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC6G6NpBZ4Kmp4pVKarPn7XiVQazhuG8kWbo4vErNJhggIgVGy8qmf8NZ6aM3OLCiAojY4//BnU1X8SsODU+NWE0og="}]},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.10":{"name":"pause-stream","version":"0.0.10","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-tester":"0.0.2","stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"dependencies":{"through":"~2.3"},"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n\nThis is now the default case of \n[through](https://github.com/dominictarr/through)\n\nhttps://github.com/dominictarr/pause-stream/commit/4a6fe3dc2c11091b1efbfde912e0473719ed9cc0\n","readmeFilename":"readme.markdown","_id":"pause-stream@0.0.10","dist":{"shasum":"e716d5c168919ddbdd4dda28a589cd4b0a5d5a20","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.10.tgz","integrity":"sha512-UzDGI829klZ39Ccpe8PqQzBVW33OOjM/YlkiDGtRm0GGkMOqx9hKapxe2oYHbl5n8bbzWvHwMDkg472z+Icaeg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC0hUh066q9yh/eIiQMlrjwsnp31N5rjwczwA5eRCMTuAIhAM9QVzEUazlTHgOvb/Kgvz6Oe2j1Q0pVQN5LxR6+nTtz"}]},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]},"0.0.11":{"name":"pause-stream","version":"0.0.11","description":"a ThroughStream that strictly buffers all readable events when paused.","main":"index.js","directories":{"test":"test"},"devDependencies":{"stream-tester":"0.0.2","stream-spec":"~0.2.0"},"scripts":{"test":"node test/index.js && node test/pause-end.js"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"keywords":["stream","pipe","pause","drain","buffer"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":["MIT","Apache2"],"dependencies":{"through":"~2.3"},"readme":"# PauseStream\n\nThis is a `Stream` that will strictly buffer when paused.\nConnect it to anything you need buffered.\n\n``` js\n  var ps = require('pause-stream')();\n\n  badlyBehavedStream.pipe(ps.pause())\n\n  aLittleLater(function (err, data) {\n    ps.pipe(createAnotherStream(data))\n    ps.resume()\n  })\n```\n\n`PauseStream` will buffer whenever paused.\nit will buffer when yau have called `pause` manually.\nbut also when it's downstream `dest.write()===false`.\nit will attempt to drain the buffer when you call resume\nor the downstream emits `'drain'`\n\n`PauseStream` is tested using [stream-spec](https://github.com/dominictarr/stream-spec)\nand [stream-tester](https://github.com/dominictarr/stream-tester)\n\nThis is now the default case of \n[through](https://github.com/dominictarr/through)\n\nhttps://github.com/dominictarr/pause-stream/commit/4a6fe3dc2c11091b1efbfde912e0473719ed9cc0\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/pause-stream/issues"},"_id":"pause-stream@0.0.11","dist":{"shasum":"fe5a34b0cbce12b5aa6a2b403ee2e73b602f1445","tarball":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz","integrity":"sha512-e3FBlXLmN/D1S+zHzanP4E/4Z60oFAa3O051qt1pxa7DEJWKAyil6upYVXCWadEnuoqa4Pkc9oUx9zsxYeRv8A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDHS3Uh9A8Ps3c362WObtNOuF98KhnJJF9ITH11ZV0mgAIhALWsMFtN1oER6hRnIUZo/sdidGbfNjvhMDYh9XrJ1Gk9"}]},"_from":".","_npmVersion":"1.3.6","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}]}},"readme":"","maintainers":[{"email":"nopersonsmodules@gmail.com","name":"nopersonsmodules"}],"time":{"modified":"2022-06-23T15:19:10.258Z","created":"2012-07-11T12:10:38.061Z","0.0.0":"2012-07-11T12:10:44.628Z","0.0.2":"2012-07-12T04:07:33.140Z","0.0.3":"2012-07-15T03:54:25.727Z","0.0.4":"2012-08-18T14:13:53.356Z","0.0.5":"2012-10-01T23:45:05.304Z","0.0.6":"2012-10-11T06:20:30.248Z","0.0.7":"2013-01-27T11:08:38.321Z","0.0.8":"2013-02-05T07:19:57.084Z","0.0.9":"2013-02-05T07:24:18.681Z","0.0.10":"2013-04-22T23:16:16.748Z","0.0.11":"2013-09-20T22:11:51.558Z"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"repository":{"type":"git","url":"git://github.com/dominictarr/pause-stream.git"},"users":{"substack":true,"edin-m":true,"pandao":true},"_etag":"W/\"e6b6299e107649aa0a7621a8c299efe2\"","_lastModified":"Thu, 23 Jun 2022 15:19:11 GMT"}