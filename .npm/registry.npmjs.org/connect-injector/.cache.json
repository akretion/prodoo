{"_id":"connect-injector","_rev":"24-d06f3cba473fb5e91ddf25814b20ac69","name":"connect-injector","description":"A middleware to inject content into any HTTP response.","dist-tags":{"latest":"0.4.4"},"versions":{"0.1.0":{"name":"connect-injector","description":"A middleware to inject text into static or proxied requests.","version":"0.1.0","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":"2.7.2","underscore":"1.4.4"},"scripts":{"test":"npm test"},"keywords":["connect","middleware","http"],"_id":"connect-injector@0.1.0","dist":{"shasum":"2acc4c589733cd4bd1420736626f9ab377cc29aa","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.1.0.tgz","integrity":"sha512-ZtTpUovIuvei5Sh+EYpPJrbjoHvcrHI/JHPTfNgnQ2fQJJ0+c4/+M5xtHYPEK7xKqdzsXwF6tbNI6R83Lq+LMQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA0uoVvIfsM8S4ORvV/pR785kVW7MKOiicnPIsBtNKBsAiBnrgYGevtWXk4qkZMmXMXNpKQV0dRGSXuTwuYWShckvA=="}]},"_npmVersion":"1.1.65","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"0.2.0":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.2.0","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":">= 2.7.2","underscore":">= 1.4.4","async":">= 0.2.5","stream-buffers":">= 0.2.3"},"devDependencies":{"should":"1.2.1","request":"2.12.0","http-proxy":"*","mocha":"1.8.1"},"scripts":{"test":"mocha test/"},"keywords":["connect","middleware","http"],"_id":"connect-injector@0.2.0","dist":{"shasum":"5a1136fcfa78686ea90ddb899d601aec2dba8f96","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.2.0.tgz","integrity":"sha512-66WPUA4kWSCxVIGvWCA9YEIK9duLdXk+2b1BtlRpG2DMT8C/HHp75IGAbuTnDk82EWO8zLsMCEgNMujeBDtKPw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDNj1MXRIK81M+0CVB24FuaQbB38g2YlQUUNMGe3+aLjAiEAn9H5cwlNz3Pc9r//HnQjJ4MHvVR9z9ZCe/IsC7JHvBc="}]},"_npmVersion":"1.1.65","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"0.2.1":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.2.1","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":">= 2.7.2","underscore":">= 1.4.4","async":">= 0.2.5","stream-buffers":">= 0.2.3"},"devDependencies":{"should":"1.2.1","request":"2.12.0","http-proxy":"*","mocha":"1.8.1"},"scripts":{"test":"mocha test/"},"keywords":["connect","middleware","http"],"_id":"connect-injector@0.2.1","dist":{"shasum":"b8840e8c6a5eab34574ab74832b425c2fa056e43","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.2.1.tgz","integrity":"sha512-xoCe6zb0Gt4P+97MvnC/nt3U1kv7CQWJL0tshOmFn99gB0I1Iyjai5GLZ8Bkw63jpubdyOp9xvhmCXaYKGCgvw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDQPvTJ3u6NkJ+e0hQ5qPXvYVaRF5q7biK6xCmQ9SJL/wIgLMyr4Y7WCNGTTywGbuL50pwciqo+3vQxwx6X0DnB7qs="}]},"_npmVersion":"1.1.65","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"0.2.2":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.2.2","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":">= 2.7.2","underscore":">= 1.4.4","async":">= 0.2.5","stream-buffers":">= 0.2.3"},"devDependencies":{"should":"1.2.1","request":"2.12.0","http-proxy":"*","mocha":"1.8.1","grunt":"~0.4.1","grunt-release":"~0.3.5"},"scripts":{"test":"mocha test/"},"keywords":["connect","middleware","http"],"_id":"connect-injector@0.2.2","dist":{"shasum":"66369d64feb2e7e705dc76344a2231bfe532f9a8","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.2.2.tgz","integrity":"sha512-8Wr93cozUxYq+5tpYvO4i6pjA8q9a16+VbYQntjjqMTPFyOjcF0awwXMssehwHHm3vSFSnIUzmz1gDWi3FkJgQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCTQwMkbVFkGlMhxICtWR+wkAJxOLpCTSINcIrIYMB0BwIhAKQDFU7ueKJsN01xGUus0D7SWK4ItAn1kY64r8ON7vNA"}]},"_from":".","_npmVersion":"1.3.1","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"0.2.3":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.2.3","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":">= 2.7.2","underscore":">= 1.4.4","async":">= 0.2.5","stream-buffers":">= 0.2.3","uberproto":"~1.1.0"},"devDependencies":{"should":"1.2.1","request":"2.12.0","http-proxy":"*","mocha":"1.8.1","grunt":"~0.4.1","grunt-release":"~0.3.5"},"scripts":{"test":"mocha test/"},"keywords":["connect","middleware","http"],"_id":"connect-injector@0.2.3","dist":{"shasum":"1bfccd592af3249c08ced61835611dda5cbe6db8","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.2.3.tgz","integrity":"sha512-zHcUqIDd506ccYboDKpJZLapktAi7J87BdczTRrFyvBVw4Vxr+GJv8DjbFHSGqtN2b+iuPWuHqq+4lzxNrje5g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDLO+d82ePvkRxKxteni1HnAvyM/6AhgH40LRKec6hZKQIhAPMWvePoQ27UBboR1R/LjCeep5+TeQ22B9/npZovLgC2"}]},"_from":".","_npmVersion":"1.3.9","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"0.3.0":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.3.0","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"async":"^0.2.5","connect":"^2.7.2","stream-buffers":"^0.2.3","uberproto":"^1.1.0","underscore":"^1.4.4"},"devDependencies":{"should":"1.2.1","request":"2.12.0","mocha":"1.8.1","http-proxy":"^1.1.5","grunt":"~0.4.1","grunt-release":"~0.3.5","grunt-contrib-jshint":"~0.6.4","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.9"},"scripts":{"test":"grunt"},"keywords":["connect","middleware","http"],"gitHead":"3227dc21ed15cdee4d879f71188056e627e11f77","_id":"connect-injector@0.3.0","_shasum":"5820d5f43a024f64e779a392fb8b84fe3636bd01","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"dist":{"shasum":"5820d5f43a024f64e779a392fb8b84fe3636bd01","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.3.0.tgz","integrity":"sha512-mlRPhPBIumfKEbAMKucWvxveje/++3+RpmtwnNWWdDgPA2RdMfjceych9uzcrtrY/HKVlNGVK0hdS6fQ4q3luw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDjJHv4ew17xqflzt4zqqEbalYL+YudWQb4UYw3wwngUAIgY7eDyuqnstVTwZE94pofUGRQTWlaHHaaM1rQPgNTrcE="}]}},"0.4.0":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.4.0","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":"^2.7.2","q":"^1.0.1","stream-buffers":"^0.2.3","uberproto":"^1.1.0","underscore":"^1.4.4"},"devDependencies":{"should":"1.2.1","request":"2.12.0","mocha":"1.8.1","http-proxy":"^1.1.5","grunt":"~0.4.1","grunt-release":"~0.3.5","grunt-contrib-jshint":"~0.6.4","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.9"},"scripts":{"test":"grunt"},"keywords":["connect","middleware","http"],"gitHead":"e3d6daffb2c88036062668b361b96c1f7aae06cf","_id":"connect-injector@0.4.0","_shasum":"22d7c0fd7c59f7d9e8dda15a35facbf2b06fff2d","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"dist":{"shasum":"22d7c0fd7c59f7d9e8dda15a35facbf2b06fff2d","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.4.0.tgz","integrity":"sha512-75wOIa/DDpMERE37rEHoB95rTLU9DIxt4zFjXjBoIjfUz5H/QwyCQhjxrp8AxGyx1qoJyflsgQ2VZN/1tJpDXw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD7J4r7MzIKkpyQzc56xXnKtybm9XpSTGJmP5ZIDoYUEQIgCRruDRFC2vB1iZSDQYMD08D5BKjUeFLShrgFXj9m8JM="}]}},"0.4.1":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.4.1","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":"^2.7.2","debug":"^2.0.0","q":"^1.0.1","stream-buffers":"^0.2.3","uberproto":"^1.1.0","underscore":"^1.4.4"},"devDependencies":{"should":"1.2.1","request":"2.12.0","mocha":"1.8.1","http-proxy":"^1.1.5","grunt":"~0.4.1","grunt-release":"~0.3.5","grunt-contrib-jshint":"~0.6.4","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.9"},"scripts":{"test":"grunt"},"keywords":["connect","middleware","http"],"gitHead":"e24125d0c4d8111cbf7a267735cf8eab4e0bbc84","_id":"connect-injector@0.4.1","_shasum":"a22b17357543e23ccdf23ffd0f5bfa40ebd67f9c","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"dist":{"shasum":"a22b17357543e23ccdf23ffd0f5bfa40ebd67f9c","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.4.1.tgz","integrity":"sha512-5N/T92GvzlBvlVM8Pc0fwaja9jmzQyseQwkb964VcWhfibGWx8p4y/zgG5HOTpnwKX/3crZxO2aEhatcQZDzug==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEgcHbfSP9P34VFWdyym9fkosr3TKlO9TbuEi85Hvc3NAiEAu5jKzJQJtVgkKdTS6zLcP0tRbC5Aof4wVsCdt8Rh4cw="}]}},"0.4.2":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.4.2","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"connect":"^2.7.2","debug":"^2.0.0","q":"^1.0.1","stream-buffers":"^0.2.3","uberproto":"^1.1.0","underscore":"^1.4.4"},"devDependencies":{"should":"1.2.1","request":"2.12.0","mocha":"1.8.1","http-proxy":"^1.1.5","grunt":"~0.4.1","grunt-release":"~0.3.5","grunt-contrib-jshint":"~0.6.4","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.9"},"scripts":{"test":"grunt"},"keywords":["connect","middleware","http"],"gitHead":"cc78e198e45585478b9af57deed2108322a77a03","_id":"connect-injector@0.4.2","_shasum":"849d1e068b36c713736ed92874a136bf92e46633","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.32","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"dist":{"shasum":"849d1e068b36c713736ed92874a136bf92e46633","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.4.2.tgz","integrity":"sha512-SmHWVISiXkY4aRyt1ZzVs5PJ0c/sDwpt6/wo89HsARxfnonqrVVCu5hBCygPJw8R7JoFqTt5RSlReb7nr5uK9Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEj5X7V9cD8cj8OsShJUhdx9/W645QEAvMPgQZ3HonBBAiEA0ZCtY2fINrIATaxaSTv+goQdltTxzQpKRGSgaEShDok="}]}},"0.4.3":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.4.3","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"debug":"^2.0.0","q":"^1.0.1","stream-buffers":"^0.2.3","uberproto":"^1.1.0","underscore":"^1.4.4"},"devDependencies":{"connect":"^2.7.2","should":"1.2.1","request":"2.12.0","mocha":"1.8.1","http-proxy":"^1.1.5","grunt":"~0.4.1","grunt-release":"~0.3.5","grunt-contrib-jshint":"~0.6.4","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.9"},"scripts":{"test":"grunt"},"keywords":["connect","middleware","http"],"gitHead":"e87d07012e143a3a634f5fab6095873bbd6c518a","_id":"connect-injector@0.4.3","_shasum":"f12d77b688dbe4ebc41c9c349d747c1de804e682","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.9.0","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"dist":{"shasum":"f12d77b688dbe4ebc41c9c349d747c1de804e682","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.4.3.tgz","integrity":"sha512-J7oeESU4Q+93wLQY7D2f2C3u5SmTQLa7KeLTe6FCZLHuzW3y3uxRj+wHo3hVFdndokugDH7mypFnOeLuP2DJog==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCXQsyBd/7Z7nrnmualCzIP1PmRVULqFHVOI5asooiOzAIhANie9EfIy7Cr18hUuv/3JbahPY++hJ4Z0EP7q3F17/bN"}]},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/connect-injector-0.4.3.tgz_1460694827787_0.9311132575385273"}},"0.4.4":{"name":"connect-injector","description":"A middleware to inject content into any HTTP response.","version":"0.4.4","homepage":"https://github.com/daffl/connect-injector","author":{"name":"David Luecke","email":"daff@neyeon.com"},"scripts":{"publish":"git push origin && git push origin --tags","release:patch":"npm version patch && npm publish","release:minor":"npm version minor && npm publish","release:major":"npm version major && npm publish","jshint":"jshint lib/. --config","test":"npm run jshint && mocha test/"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"licenses":[{"type":"MIT","url":"https://github.com/daffl/connect-injector/blob/master/LICENSE-MIT"}],"main":"lib/connect-injector","engines":{"node":">= 0.8.0"},"dependencies":{"debug":"^2.0.0","q":"^1.0.1","stream-buffers":"^0.2.3","uberproto":"^1.1.0"},"devDependencies":{"connect":"^2.7.2","http-proxy":"^1.1.5","jshint":"^2.9.2","mocha":"1.8.1","request":"2.12.0","should":"1.2.1"},"keywords":["connect","middleware","http"],"gitHead":"e78e3878bde44c116c33ae0d7dec607720f9f959","_id":"connect-injector@0.4.4","_shasum":"a81959c31ecf5caa0f3dcc325c28ed90b830aa90","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.2.0","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"dist":{"shasum":"a81959c31ecf5caa0f3dcc325c28ed90b830aa90","tarball":"https://registry.npmjs.org/connect-injector/-/connect-injector-0.4.4.tgz","integrity":"sha512-hdBG8nXop42y2gWCqOV8y1O3uVk4cIU+SoxLCPyCUKRImyPiScoNiSulpHjoktRU1BdI0UzoUdxUa87thrcmHw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGjA7DUfXbRhMKTW5I6DRMlWWB2ka3gux/xgL3iCBd8AAiBTJue9hDOD7LEy8Uu1+yUCfvV1d/tCZjumDYQrCnZq/g=="}]},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/connect-injector-0.4.4.tgz_1465018312861_0.5437246686778963"}}},"readme":"# connect-injector\n\nA middleware to inject content into any HTTP response.\n\n[![Build Status](https://travis-ci.org/daffl/connect-injector.png?branch=master)](https://travis-ci.org/daffl/connect-injector)\n\n## Getting Started\n\nInstall the module with: `npm install connect-injector`\n\n## Injecting\n\nThe basic API looks like this:\n\n```javascript\nvar injector = require('connect-injector');\nvar middleware = injector(function when(req, res) {\n  // for this request and repsonse\n  // return whether or not to enable injecting\n}, function converter(content, req, res, callback) {\n  content // the entire response buffer\n  req // the HTTP request\n  res // the HTTP response\n  callback // (error, data) with the injected data\n});\n```\n\nAnd can be used like any other Connect and Express middleware.\nYou need to make sure to use the injector middleware *before* the actual content is being written.\n\n## Examples\n\n### JSONP support\n\nA very useful example for connect-injector is to add [JSONP](http://en.wikipedia.org/wiki/JSONP)\nsupport to any `application/json` repsonse:\n\n```javascript\nvar injector = require('connect-injector');\nvar inject = injector(function(req, res) {\n  var isJSON = res.getHeader('content-type').indexOf('application/json') !== -1;\n  return isJSON && req.query.callback;\n}, function(data, req, res, callback) {\n  callback(null, req.query.callback + '(' + data.toString() + ')');\n});\n\n// inject needs to be used before any middleware that writes to the response\nconnect().use(connect.query()).use(inject).use(/* your other middleware here */);\n```\n\nNow any `application/json` response will be wrapped into a callback if given the\n`callback=xyz` query parameter.\n\n### Code minification\n\nAnother use case would be to minify JavaScript files on the fly using [UglifyJS](https://github.com/mishoo/UglifyJS):\n\n```js\nvar injector = require('connect-injector');\nvar connect = require('connect');\nvar UglifyJS = require('uglify-js');\n// Cache for already uglified files\nvar cache = {};\n// Function that uglifies JavaScript code\nvar uglify = function (code) {\n  var toplevel = UglifyJS.parse(code);\n\n  toplevel.figure_out_scope();\n\n  var compressor = UglifyJS.Compressor({\n    warnings: false\n  });\n  var compressed = toplevel.transform(compressor);\n\n  compressed.figure_out_scope();\n  compressed.compute_char_frequency();\n  compressed.mangle_names();\n\n  return compressed.print_to_string();\n};\n\nvar inject = injector(function(req, res) {\n  return res.getHeader('content-type').indexOf('application/javascript') !== -1;\n}, function(data, req, res, callback) {\n  // Check the cache, uglify the code if not and add it\n  if(!cache[req.url]) {\n    cache[req.url] = uglify(data.toString());\n  }\n\n  callback(null, cache[req.url]);\n});\n\n// inject needs to be used before any middleware that writes to the response\nvar app = connect().use(inject).use(connect.static(__dirname + '/../test'));\n\napp.listen(8080);\n```\n\n### Rewriting proxied files\n\nconnect-injector is tested to work with [http-proxy](https://github.com/nodejitsu/node-http-proxy)\nyou can rewrite existing proxied content:\n\n```js\nvar httpProxy = require('http-proxy');\nvar connect = require('connect');\nvar injector = require('connect-injector');\nvar proxy = httpProxy.createProxyServer();\nvar inject = injector(function(req, res) {\n  return res.getHeader('content-type').indexOf('text/html') === 0;\n}, function(data, req, res, callback) {\n  callback(null, data.toString().replace('</body>', '<p>Powered by connect-injector</p></body>'));\n});\nvar proxyMiddleware = function(req, res) {\n  // You need to rewrite your host in order to be able to hit virtual hosts\n  req.headers.host = 'daffl.github.io';\n  proxy.web(req, res, {\n    target: 'http://daffl.github.io'\n  });\n};\n\nvar proxyApp = connect().use(inject).use(proxyMiddleware);\n\nproxyApp.listen(8080);\n```\n\nAfter starting the server, check `http://localhost:8080/connect-injector/dummycontent.html`\nto see the injected content.\n\n## Release History\n\n__0.4.2__\n\n- Fix for empty responses not trying to be rewritten ([#13](https://github.com/daffl/connect-injector/issues/13), [#14](https://github.com/daffl/connect-injector/pull/14))\n\n__0.4.1__\n\n- Fix connect-injector to work with Node 0.10.32 ([#11](https://github.com/daffl/connect-injector/pull/11))\n- Add debug messages and remove header rewriting ([#12](https://github.com/daffl/connect-injector/pull/12))\n\n__0.4.0__\n\n- Fix issue when using GZip and refactor to use Q and proper NodeJS callbacks ([#9](https://github.com/daffl/connect-injector/pull/9))\n\n__0.3.0__\n\n- Injector works with HTTP proxy and GZipped content ([#4](https://github.com/daffl/connect-injector/pull/4), [#7](https://github.com/daffl/connect-injector/pull/7), [#8](https://github.com/daffl/connect-injector/pull/8))\n\n__0.2.3__\n\n- Fix caching issues for response headers not being written if there is no body ([#3](https://github.com/daffl/connect-injector/issues/3))\n\n__0.2.2__\n\n- Fix handling of responses with an empty body ([#1](https://github.com/daffl/connect-injector/pull/1))\n\n__0.2.1__\n\n- Fix bug not setting `isIntercepted` properly\n\n__0.2.0__\n\n- Allow chaining injectors\n- Unit tests and CI\n- Fixes for writing correct headers\n- Use [stream-buffers](https://github.com/samcday/node-stream-buffer) instead of concatenating\n\n__0.1.0__\n\n- Initial alpha release\n\n## License\n\nCopyright (c) 2016 David Luecke  \nLicensed under the MIT license.\n","maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"time":{"modified":"2022-06-13T21:32:48.686Z","created":"2013-02-09T07:01:14.930Z","0.1.0":"2013-02-09T07:01:16.055Z","0.2.0":"2013-02-14T16:02:52.626Z","0.2.1":"2013-02-15T14:43:00.786Z","0.2.2":"2013-07-07T18:35:35.714Z","0.2.3":"2013-09-17T04:57:08.827Z","0.3.0":"2014-07-15T03:46:48.808Z","0.4.0":"2014-07-15T22:40:54.714Z","0.4.1":"2014-09-23T21:56:48.043Z","0.4.2":"2014-11-14T21:29:32.836Z","0.4.3":"2016-04-15T04:33:48.272Z","0.4.4":"2016-06-04T05:31:53.345Z"},"author":{"name":"David Luecke","email":"daff@neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/connect-injector.git"},"homepage":"https://github.com/daffl/connect-injector","keywords":["connect","middleware","http"],"bugs":{"url":"https://github.com/daffl/connect-injector/issues"},"readmeFilename":"README.md","users":{"zhangyaochun":true},"_etag":"W/\"c009357982042879ffea06e83a6825bd\"","_lastModified":"Mon, 13 Jun 2022 21:32:49 GMT"}