{"_id":"simple-is","_rev":"7-808a2fef44b82bb57b6a71992b2eeaf7","name":"simple-is","description":"maximally minimal type-testing library","dist-tags":{"latest":"0.2.0"},"versions":{"0.1.0":{"name":"simple-is","version":"0.1.0","description":"maximally minimal type-testing library","main":"simple-is.js","repository":{"type":"git","url":"https://github.com/olov/simple-is.git"},"keywords":["is","type","test","check","assert"],"scripts":{"test":"tap test/*.js"},"devDependencies":{"tap":"~0.4.0"},"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"license":"MIT","readme":"# simple-is.js\nA maximally minimal type-testing library. Use it to make your code\nmore readable. Works in node and browsers.\n\n\n\n## Usage\n`var is = require(\"simple-is\");`\n\nUse `is.number(x)` instead of `typeof x === \"number\"` (also `is.boolean`, `is.string`, `is.function`).\n\nUse `is.nan(x)` instead of `typeof x === \"number\" && isNaN(x)`, `x !== x` or ES6 `Number.isNaN(x)`.\n\nUse `is.object(x)` instead of `x !== null && typeof x === \"object\"`.\n\nUse `is.primitive(x)` instead of `x === null || x === undefined || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\"` (verbose on purpose).\n\nUse `is.array(x)` instead of ES5 `Array.isArray`.\n\nUse `is.finitenumber(x)` instead of `typeof x === \"number\" && isFinite(x)` or ES6 `Number.isFinite(x)`.\n\nUse `is.someof(x, [\"first\", 2, obj])` instead of (usually) `x === \"first\" || x === 2 || x === obj` or (alternatively)  `[\"first\", 2, obj].indexOf(x) >= 0`. Great for reducing copy and paste mistake in `if`-conditions and for making them more readable.\n\nUse `is.noneof(x, [\"first\", 2, obj])` instead of (usually) `x !== \"first\" && x !== 2 && x !== obj` or (alternatively)  `[\"first\", 2, obj].indexOf(x) === -1`.\n\nUse `is.in(x, \"name\")` instead of `Object.prototype.hasOwnProperty.call(x, \"name\")`.\n\nThat's it.\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install simple-is\n\n```javascript\nvar is = require(\"simple-is\");\n```\n\n### Browser\nClone the repo and include it in a script tag\n\n    git clone https://github.com/olov/simple-is.git\n\n```html\n<script src=\"simple-is/simple-is.js\"></script>\n```\n","readmeFilename":"README.md","_id":"simple-is@0.1.0","dist":{"shasum":"2cbf1bb4855e9b236dd14f9ae7e06cb35c71576e","tarball":"https://registry.npmjs.org/simple-is/-/simple-is-0.1.0.tgz","integrity":"sha512-/s6DE5PSTIzGp/NeJ/GMHG59Z8bHmD/dNTp5Df0RmL4phs6+n6BkFvGqWhXLCuKd/KNQF1Fo5jUMqugjvJRymw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC4krER0Q0hUE208fD+Xfa9U2ePT87wqykamQ0n6vlgfQIhAOjr5N1EXkim4XjJ5BRlOXxfkWyrNDX0kYV9xB48WV+v"}]},"_resolved":"../simple-is.tgz","_from":"../simple-is.tgz","_npmVersion":"1.2.18","_npmUser":{"name":"olov","email":"olov.lassus@gmail.com"},"maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}]},"0.2.0":{"name":"simple-is","version":"0.2.0","description":"maximally minimal type-testing library","main":"simple-is.js","repository":{"type":"git","url":"https://github.com/olov/simple-is.git"},"keywords":["is","type","test","check","assert"],"scripts":{"test":"tap test/*.js"},"devDependencies":{"tap":"~0.4.0"},"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"license":"MIT","readme":"# simple-is.js\nA maximally minimal type-testing library. Use it to make your code\nmore readable. Works in node and browsers.\n\n\n\n## Usage\n`var is = require(\"simple-is\");`\n\nUse `is.number(x)` instead of `typeof x === \"number\"` (also `is.boolean`, `is.string`, `is.fn`).\n\nUse `is.nan(x)` instead of `typeof x === \"number\" && isNaN(x)`, `x !== x` or ES6 `Number.isNaN(x)`.\n\nUse `is.object(x)` instead of `x !== null && typeof x === \"object\"`.\n\nUse `is.primitive(x)` instead of `x === null || x === undefined || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\"` (verbose on purpose).\n\nUse `is.array(x)` instead of ES5 `Array.isArray`.\n\nUse `is.finitenumber(x)` instead of `typeof x === \"number\" && isFinite(x)` or ES6 `Number.isFinite(x)`.\n\nUse `is.someof(x, [\"first\", 2, obj])` instead of (usually) `x === \"first\" || x === 2 || x === obj` or (alternatively)  `[\"first\", 2, obj].indexOf(x) >= 0`. Great for reducing copy and paste mistake in `if`-conditions and for making them more readable.\n\nUse `is.noneof(x, [\"first\", 2, obj])` instead of (usually) `x !== \"first\" && x !== 2 && x !== obj` or (alternatively)  `[\"first\", 2, obj].indexOf(x) === -1`.\n\nUse `is.own(x, \"name\")` instead of `Object.prototype.hasOwnProperty.call(x, \"name\")`.\n\nThat's it.\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install simple-is\n\n```javascript\nvar is = require(\"simple-is\");\n```\n\n### Browser\nClone the repo and include it in a script tag\n\n    git clone https://github.com/olov/simple-is.git\n\n```html\n<script src=\"simple-is/simple-is.js\"></script>\n```\n","readmeFilename":"README.md","_id":"simple-is@0.2.0","dist":{"shasum":"2abb75aade39deb5cc815ce10e6191164850baf0","tarball":"https://registry.npmjs.org/simple-is/-/simple-is-0.2.0.tgz","integrity":"sha512-GJXhv3r5vdj5tGWO+rcrWgjU2azLB+fb7Ehh3SmZpXE0o4KrrFLti0w4mdDCbR29X/z0Ls20ApjZitlpAXhAeg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDt04Tc45RuSaihAVfPnpn+FR/6NiRDDAHg70a+zoKp7QIhAMcRKt/1Aen9FXocO487tg7Lblj7PV52/DU5h2nH/SYE"}]},"_resolved":"/tmp/simple-is.tgz","_from":"/tmp/simple-is.tgz","_npmVersion":"1.2.18","_npmUser":{"name":"olov","email":"olov.lassus@gmail.com"},"maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}]}},"readme":"# simple-is.js\nA maximally minimal type-testing library. Use it to make your code\nmore readable. Works in node and browsers.\n\n\n\n## Usage\n`var is = require(\"simple-is\");`\n\nUse `is.number(x)` instead of `typeof x === \"number\"` (also `is.boolean`, `is.string`, `is.function`).\n\nUse `is.nan(x)` instead of `typeof x === \"number\" && isNaN(x)`, `x !== x` or ES6 `Number.isNaN(x)`.\n\nUse `is.object(x)` instead of `x !== null && typeof x === \"object\"`.\n\nUse `is.primitive(x)` instead of `x === null || x === undefined || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\"` (verbose on purpose).\n\nUse `is.array(x)` instead of ES5 `Array.isArray`.\n\nUse `is.finitenumber(x)` instead of `typeof x === \"number\" && isFinite(x)` or ES6 `Number.isFinite(x)`.\n\nUse `is.someof(x, [\"first\", 2, obj])` instead of (usually) `x === \"first\" || x === 2 || x === obj` or (alternatively)  `[\"first\", 2, obj].indexOf(x) >= 0`. Great for reducing copy and paste mistake in `if`-conditions and for making them more readable.\n\nUse `is.noneof(x, [\"first\", 2, obj])` instead of (usually) `x !== \"first\" && x !== 2 && x !== obj` or (alternatively)  `[\"first\", 2, obj].indexOf(x) === -1`.\n\nUse `is.in(x, \"name\")` instead of `Object.prototype.hasOwnProperty.call(x, \"name\")`.\n\nThat's it.\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install simple-is\n\n```javascript\nvar is = require(\"simple-is\");\n```\n\n### Browser\nClone the repo and include it in a script tag\n\n    git clone https://github.com/olov/simple-is.git\n\n```html\n<script src=\"simple-is/simple-is.js\"></script>\n```\n","maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}],"time":{"modified":"2022-06-26T19:41:21.773Z","created":"2013-04-19T11:16:42.967Z","0.1.0":"2013-04-19T11:16:47.845Z","0.2.0":"2013-04-21T10:46:51.962Z"},"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"repository":{"type":"git","url":"https://github.com/olov/simple-is.git"},"_etag":"W/\"6bb1fc794f37f07ee8aa970e4f848f09\"","_lastModified":"Sun, 26 Jun 2022 19:41:22 GMT"}